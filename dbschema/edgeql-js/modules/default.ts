// GENERATED by @edgedb/generate v0.1.0
// Run 'npx @edgedb/generate edgeql-js' to re-generate

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $AdministratorλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
}>;
type $Administrator = $.ObjectType<"default::Administrator", $AdministratorλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Administrator = $.makeType<$Administrator>(_.spec, "183695ef-ebd8-11ea-bee0-8d61d3cdb902", _.syntax.literal);

const Administrator: $.$expr_PathNode<$.TypeSet<$Administrator, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Administrator, $.Cardinality.Many), null);

export type $AgreementλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "update_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "versions": $.LinkDesc<$AgreementVersion, $.Cardinality.Many, {}, false, false,  false, false>;
  "<agreement[is Repository]": $.LinkDesc<$Repository, $.Cardinality.Many, {}, false, false,  false, false>;
  "<agreement": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Agreement = $.ObjectType<"default::Agreement", $AgreementλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Agreement = $.makeType<$Agreement>(_.spec, "1839ec05-ebd8-11ea-979e-4bfa75545cac", _.syntax.literal);

const Agreement: $.$expr_PathNode<$.TypeSet<$Agreement, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Agreement, $.Cardinality.Many), null);

export type $AgreementTextλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "culture": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "text": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, true>;
  "update_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "<texts[is AgreementVersion]": $.LinkDesc<$AgreementVersion, $.Cardinality.Many, {}, false, false,  false, false>;
  "<texts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $AgreementText = $.ObjectType<"default::AgreementText", $AgreementTextλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
]>;
const $AgreementText = $.makeType<$AgreementText>(_.spec, "1848cc86-ebd8-11ea-ba83-f9b943ba3076", _.syntax.literal);

const AgreementText: $.$expr_PathNode<$.TypeSet<$AgreementText, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($AgreementText, $.Cardinality.Many), null);

export type $AgreementVersionλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "current": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "draft": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "texts": $.LinkDesc<$AgreementText, $.Cardinality.Many, {}, false, false,  false, false>;
  "<versions[is Agreement]": $.LinkDesc<$Agreement, $.Cardinality.Many, {}, false, false,  false, false>;
  "<agreement_version[is ContributorLicenseAgreement]": $.LinkDesc<$ContributorLicenseAgreement, $.Cardinality.Many, {}, false, false,  false, false>;
  "<agreement_version": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<versions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $AgreementVersion = $.ObjectType<"default::AgreementVersion", $AgreementVersionλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
]>;
const $AgreementVersion = $.makeType<$AgreementVersion>(_.spec, "18459c88-ebd8-11ea-8563-2915e5851074", _.syntax.literal);

const AgreementVersion: $.$expr_PathNode<$.TypeSet<$AgreementVersion, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($AgreementVersion, $.Cardinality.Many), null);

export type $CommentInfoλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "pull_request_id": $.PropertyDesc<_std.$int64, $.Cardinality.One, true, false, false, false>;
  "comment_id": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
}>;
type $CommentInfo = $.ObjectType<"default::CommentInfo", $CommentInfoλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
  {pull_request_id: {__element__: _std.$int64, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {comment_id: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $CommentInfo = $.makeType<$CommentInfo>(_.spec, "1853b803-ebd8-11ea-9510-23fcc174b2bd", _.syntax.literal);

const CommentInfo: $.$expr_PathNode<$.TypeSet<$CommentInfo, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($CommentInfo, $.Cardinality.Many), null);

export type $ContributorLicenseAgreementλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "username": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "normalized_username": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "normalized_email": $.PropertyDesc<_std.$str, $.Cardinality.One, false, true, false, false>;
  "agreement_version": $.LinkDesc<$AgreementVersion, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $ContributorLicenseAgreement = $.ObjectType<"default::ContributorLicenseAgreement", $ContributorLicenseAgreementλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ContributorLicenseAgreement = $.makeType<$ContributorLicenseAgreement>(_.spec, "1858123d-ebd8-11ea-9155-77732d0491a8", _.syntax.literal);

const ContributorLicenseAgreement: $.$expr_PathNode<$.TypeSet<$ContributorLicenseAgreement, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ContributorLicenseAgreement, $.Cardinality.Many), null);

export type $RepositoryλShape = $.typeutil.flatten<_std.$Object_fe84743ee09e11edb375672f3ae9cdcdλShape & {
  "full_name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "agreement": $.LinkDesc<$Agreement, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $Repository = $.ObjectType<"default::Repository", $RepositoryλShape, null, [
  ..._std.$Object_fe84743ee09e11edb375672f3ae9cdcd['__exclusives__'],
  {full_name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Repository = $.makeType<$Repository>(_.spec, "1863f903-ebd8-11ea-81d3-b390dcf42e29", _.syntax.literal);

const Repository: $.$expr_PathNode<$.TypeSet<$Repository, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Repository, $.Cardinality.Many), null);

type remove_plus_suffix_from_emailλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  _std.$str, $.cardutil.paramCardinality<P1>
>;
function remove_plus_suffix_from_email<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  email: P1,
): remove_plus_suffix_from_emailλFuncExpr<P1>;
function remove_plus_suffix_from_email(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('default::remove_plus_suffix_from_email', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "00000000-0000-0000-0000-000000000101"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "default::remove_plus_suffix_from_email",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type simplify_gmail_addressλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  _std.$str, $.cardutil.paramCardinality<P1>
>;
function simplify_gmail_address<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  email: P1,
): simplify_gmail_addressλFuncExpr<P1>;
function simplify_gmail_address(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('default::simplify_gmail_address', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "00000000-0000-0000-0000-000000000101"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "default::simplify_gmail_address",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type normalize_emailλFuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
> = $.$expr_Function<
  _std.$str, $.cardutil.paramCardinality<P1>
>;
function normalize_email<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>,
>(
  email: P1,
): normalize_emailλFuncExpr<P1>;
function normalize_email(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('default::normalize_email', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], returnTypeId: "00000000-0000-0000-0000-000000000101"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "default::normalize_email",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};



export { $Administrator, Administrator, $Agreement, Agreement, $AgreementText, AgreementText, $AgreementVersion, AgreementVersion, $CommentInfo, CommentInfo, $ContributorLicenseAgreement, ContributorLicenseAgreement, $Repository, Repository };

type __defaultExports = {
  "Administrator": typeof Administrator;
  "Agreement": typeof Agreement;
  "AgreementText": typeof AgreementText;
  "AgreementVersion": typeof AgreementVersion;
  "CommentInfo": typeof CommentInfo;
  "ContributorLicenseAgreement": typeof ContributorLicenseAgreement;
  "Repository": typeof Repository;
  "remove_plus_suffix_from_email": typeof remove_plus_suffix_from_email;
  "simplify_gmail_address": typeof simplify_gmail_address;
  "normalize_email": typeof normalize_email
};
const __defaultExports: __defaultExports = {
  "Administrator": Administrator,
  "Agreement": Agreement,
  "AgreementText": AgreementText,
  "AgreementVersion": AgreementVersion,
  "CommentInfo": CommentInfo,
  "ContributorLicenseAgreement": ContributorLicenseAgreement,
  "Repository": Repository,
  "remove_plus_suffix_from_email": remove_plus_suffix_from_email,
  "simplify_gmail_address": simplify_gmail_address,
  "normalize_email": normalize_email
};
export default __defaultExports;
